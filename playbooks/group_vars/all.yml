# Defaults
target: all
pg_ver: 13
postgres_owner: "postgres"
barman_owner: "barman"
postgres_home: "/var/lib/pgsql"
data_mount: /db
temp_mount: /dbtemp
log_mount: /log
data_dir: "{{ data_mount }}/PostgreSQL/{{ pg_ver }}/data"
temp_dir: "{{ temp_mount }}/{{ pg_ver }}"
log_dir: "{{ log_mount }}"
pg_port: "5432"

# VRA Options
pitr_enabled: 1
read_slave_enabled: 0
recovery_window: 7
max_connections: 200
spatial_enabled: 1
checkpoint_timeout: 300

ansible_python_interpreter: "/usr/bin/python"

# Tuning section

# Determine PostgreSQL tuning parameters based on host facts
# Remeber this is just a guide and each case needs to be
# considered individually - based on expected usage patterns

# shared_buffers is the amount of memory dedicated to postgresql for caching data
# rule of thumb - allocate a quarter of system ram
shared_buffers: "{{ (ansible_memtotal_mb*0.25)|int|abs }}"

# # effective_cache_size is not a hard limit, more information for postgresql to use for its optimizer decision process
# # rule of thumb - make postgresql aware of 75% of the system RAM
effective_cache_size: "{{ (ansible_memtotal_mb*0.75)|int|abs }}"

# # checkpoint settings
# # rule of thumb - there is no rule of thumb, but we can start with some base figures
# # checkpoint segments were around in version < 9.5 however from 9.5 we have a new mechanism
# # starting figures are checkpoint every 256MB of data - adjust as required.


# ENFORCING DBENV VARIABLES
acceptable_env: [ LIVE, Alpha, Bravo, Prodev, CONTROL, CORP ]
acceptable_dev: [ Alpha, Bravo, Prodev ]
acceptable_prod: [ LIVE, CONTROL, CORP ]


